# -*- coding: utf-8 -*-
"""A3_P2_[hi3334].ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iBax2qke9AlQoBIQ8Wz1jGFzxwUIYDIh
"""

# import modules
import tensorflow as tf
from tensorflow.keras import *
from tensorflow import keras as keras
from tensorflow.keras.datasets import mnist
import tensorflow_datasets as tfds
import numpy as np
from sklearn.preprocessing import LabelBinarizer
import gzip, pickle, tensorflow_datasets as TFDatasets

"""
-----------------------------------------------------------------------------------------------
Step 1. Restore the model you saved in Problem 1 [5 points]
-----------------------------------------------------------------------------------------------
"""
from google.colab import drive
drive.mount("/content/A3_P1_[hi3334].model")

model: Model = keras.models.load_model('A3_P1_[hi3334].model')

"""
-----------------------------------------------------------------------------------------------
Step 2. Test the restored model with both MNIST and USPS testing samples [10 points]
Set batch size to 128
MNIST accuracy = 1.0
USPS accuracy before fine-tune: 0.6983871102333069
-----------------------------------------------------------------------------------------------
"""
with gzip.open('usps.pkl') as f:
    u = pickle._Unpickler(f)
    u.encoding = 'latin1'
    usps_train_set, usps_test_set = u.load()

    x_train, y_train = usps_train_set
    x_train: tf.Tensor = tf.reshape(x_train, (-1, 28, 28, 1))
    x_test, y_test = usps_test_set
    x_test: tf.Tensor = tf.reshape(x_test, (-1, 28, 28, 1))

    
# USPS data accuracy
num_classes=10
y_test=tf.keras.utils.to_categorical(y_test, 10)
usps_acc=model.evaluate(x_test,y_test, batch_size=128)
print("accuracy of USPS:", usps_acc[1])

x_training_mnist, x_testing_mnist=tfds.load(name="mnist", split=['train', 'test'])
x_testing_mnist=x_testing_mnist.batch(128)

for sample in tfds.as_numpy(x_testing_mnist):
    image=tf.cast(sample['image'], tf.float32)
    image=sample['image']/255
    mnist_label=sample['label']

mnist_label=tf.keras.utils.to_categorical(mnist_label,10)
mnist_accuracy= model.evaluate(image,mnist_label)
print ("accuracy of mnist :",mnist_accuracy[1])

"""
-----------------------------------------------------------------------------------------------
Step 3. Train you CNN with USPS training samples [10 points]
Set epochs to 5 and batch size to 128
-----------------------------------------------------------------------------------------------
"""
label_as_binary = LabelBinarizer()
training_y_labels = label_as_binary.fit_transform(y_train)
model.fit(x_train, training_y_labels, batch_size=128, epochs=5)

"""
-----------------------------------------------------------------------------------------------
Step 4. Test your fine tuned CNN on USPS testing data and report testing accuracy [5 points]
USPS accuracy after fine-tune = 0.9844086170196533
-----------------------------------------------------------------------------------------------
"""
scores_test = model.evaluate(x_test, y_test, verbose=2)
print("Test score loss:", scores_test[0])
print("Test score accuracy:", scores_test[1])